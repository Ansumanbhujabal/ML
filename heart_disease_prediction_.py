# -*- coding: utf-8 -*-
"""Heart Disease Prediction .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LBdVZRgCo0VGK7MVoElMccGXz8tapgOf

# **Import**
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression

data= pd.read_csv('/content/heart_disease_data.csv')

data.head()

data.shape

data.info

"""# **Checking Missing Value**"""

data.isnull().sum()

"""# **Checking Target Distribution**"""

data['target'].value_counts()

"""1--> Defective Heart

0-->Healthy Heart

# **Splitting target and features**
"""

X= data.drop(columns='target', axis =1)
Y= data['target']

print(X)

print(Y)

"""# **Train-test Split**"""

X_train,X_test, Y_train, Y_test=train_test_split(X,Y, test_size=0.2,stratify=Y, random_state=3)

print(X_train.shape, X_test.shape)

"""# **Model Training**"""

model = LogisticRegression()

model.fit(X_train, Y_train)

"""# **Model Evaluation**"""

#Accuracy on train
X_train_prediction=model.predict(X_train)
accuracy= accuracy_score(X_train_prediction, Y_train)

print(accuracy)

#on test data
X_test_prediction= model.predict(X_test)
accuracy1= accuracy_score(X_test_prediction,Y_test)
print(accuracy1)

"""# **Building Predictive System**"""

input_data=(61,1,2,150,243,1,1,137,1,1,1,0,2)
# change data to numpy array
input_data_array = np.asarray(input_data)
#reshape
input_data_array_reshaped= input_data_array.reshape(1,-1)
prediction=model.predict(input_data_array_reshaped)


if (prediction[0] ==1):
  print('Defective Heart')
else:
  print('Fine Heart')

