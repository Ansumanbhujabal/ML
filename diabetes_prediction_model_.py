# -*- coding: utf-8 -*-
"""Diabetes Prediction Model .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dG5imGuREB56EO0Yt5sqcxLbh_Z4-dqn

# **IMPORT**
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn import  svm

data=pd.read_csv('/content/drive/MyDrive/Datasets/diabetes.csv')

data.head()

"""# **Value Counts**"""

data['Outcome'].value_counts()

"""1--Diabetic

0--Non-diabetic
# **Group By Outcome**
"""

data.groupby('Outcome').mean()

"""# **Feature and Labels**"""

X= data.drop(columns='Outcome',axis=1)
Y=data['Outcome']

X.head()

Y.head()

"""# **Standardization**"""

scaler=StandardScaler()

standardized_data=scaler.fit_transform(X)

X=standardized_data
print(X)

"""# **Train Test Split**"""

X_train, X_test, Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y, random_state=2)

X_train.shape

X.shape

"""# **Training The Model**

**Support Vector  Classifier**
"""

classifier= svm.SVC(kernel='linear')

"""**Training the Support Vector  Machine Classifier**"""

classifier.fit(X_train,Y_train)

"""# **Evaluation on Train data**"""

X_train_prediction= classifier.predict(X_train)

training_data_accuracy_score= accuracy_score(X_train_prediction,Y_train)

print(training_data_accuracy_score)

"""# **Evaluation on Test Data**"""

X_test_prediction= classifier.predict(X_test)

test_data_accuracy_score= accuracy_score(X_test_prediction,Y_test )

print(test_data_accuracy_score)

"""# **Predictive Model**"""

input_data=(5,166,72,19,175,25.8,0.587,51)

"""**Converting to np array**"""

input_data= np.asarray(input_data)

"""**Reshape**"""

input_data=input_data.reshape(1,-1)

"""**standardization**"""

input_data=scaler.transform(input_data)

"""**prediction**"""

prediction= classifier.predict(input_data)
print(prediction)

"""# **Output**"""

if prediction[0]==0:
  print('Non-Diabetic')
else:
  print('Diabetic')

