# -*- coding: utf-8 -*-
"""Spam Mail Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w2u8hNLJQivAeFJaZsjwX3GYC7CvhzBJ

# **IMPORT**
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

data= pd.read_csv('/content/drive/MyDrive/Datasets/mail_data.csv')

data.head()

"""# **Handling Missing Values**"""

data= data.where(pd.notnull(data),'')

data.head()

data.shape

"""# **Label Encoding**"""

data.loc[data['Category']=='spam','Category']=0
data.loc[data['Category']=='ham','Category']=1

data.head

"""# **Features and Labels**"""

X= data['Message']
Y= data['Category']

print(X)

"""# **Train Test Split**"""

X_train, X_test, Y_train, Y_test= train_test_split(X,Y, test_size=0.2, random_state=2)

print(X_train.shape,X_test.shape, X.shape)

"""# **Feature Extraction**"""

feature_extraction= TfidfVectorizer(min_df=1,stop_words='english', lowercase=1)
# if any word is used only for once then , it will be ignored in the prediction

"""**Text to Vector**"""

X_train_features=feature_extraction.fit_transform(X_train)
X_test_features=feature_extraction.transform(X_test)

print(X_train_features, X_test_features)

"""# **Labels to integers**

"""

Y_train= Y_train.astype('int')
Y_test= Y_test.astype('int')

"""# **Training the model**"""

model= LogisticRegression()

model.fit(X_train_features, Y_train)

"""# **Evaluation**

**On Training Data**
"""

prediction_on_train= model.predict(X_train_features)

accuracy_on_train= accuracy_score(Y_train, prediction_on_train)

print(accuracy_on_train)

"""**On Test Data**"""

prediction_on_test= model.predict(X_test_features)

accuracy_on_test_data = accuracy_score(Y_test, prediction_on_test)

print(accuracy_on_test_data )

"""# **Predictive System**"""

input=["I've been searching for the right words to thank you for this br"]

"""Feature Extraction"""

input_features=feature_extraction.transform(input)

"""**Prediction**"""

result= model.predict(input_features)

if result[0]==1:
  print('Ham')
else:
  print('Spam')

